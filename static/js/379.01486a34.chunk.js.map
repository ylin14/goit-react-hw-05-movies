{"version":3,"file":"static/js/379.01486a34.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesSerch/SearchBar/searchbar.module.css?e217","components/MoviesSerch/SearchBar/Searchbar.jsx","components/MoviesSerch/MoviesSearch.jsx","pages/MoviesPage/MoviesPage.jsx","webpack://react-homework-template/./src/shared/component/MoviesItem/moviesItem.module.css?19fc","shared/component/MoviesItem/MoviesItem.jsx","webpack://react-homework-template/./src/shared/component/MoviesList/moviesList.module.css?6b83","shared/component/MoviesList/MoviesList.jsx","shared/service/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"searchbar_searchbar__SZasF\",\"form\":\"searchbar_form__oFrip\",\"button\":\"searchbar_button__RJllU\",\"buttonLabel\":\"searchbar_buttonLabel__CvMad\",\"input\":\"searchbar_input__ogUTl\"};","import { useState, memo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './searchbar.module.css';\n\nfunction Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const onChange = ({ target }) => {\n    const { value } = target;\n    setQuery(value);\n  };\n  const getQuery = e => {\n    e.preventDefault();\n\n    onSubmit(query);\n\n    setQuery('');\n  };\n\n  return (\n    <header className={s.searchbar}>\n      <form className={s.form} onSubmit={getQuery}>\n        <button type=\"submit\" className={s.button}>\n          <span className={s.buttonLabel}>Search</span>\n        </button>\n\n        <input\n          name=\"query\"\n          value={query}\n          className={s.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          onChange={onChange}\n          required\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default memo(Searchbar);\n","import { useState, useEffect, useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport SearchBar from './SearchBar';\nimport MoviesList from 'shared/component/MoviesList';\nimport { searchFilmByName } from 'shared/service/moviesApi';\n\nfunction MoviesSearch() {\n  const [state, setState] = useState({\n    movies: [],\n    isLoading: false,\n    error: null,\n  });\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      if (!query) {\n        return;\n      }\n      setState(prevState => ({ ...prevState, isLoading: true, error: null }));\n\n      const { results } = await searchFilmByName(query);\n      try {\n        setState(prevState => ({\n          ...prevState,\n          isLoading: false,\n          movies: [...results],\n        }));\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          isLoading: false,\n          error: error.message,\n        }));\n      }\n    };\n    fetchMovies();\n  }, [query]);\n\n  const setMovie = useCallback(\n    query => {\n      setSearchParams({ query });\n      setState(prevState => ({ ...prevState, movies: [] }));\n    },\n    [setState, setSearchParams]\n  );\n\n  const { movies, isLoading, error } = state;\n\n  return (\n    <>\n      <SearchBar onSubmit={setMovie} />\n      {isLoading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      {Boolean(movies.length) && <MoviesList items={movies} />}\n    </>\n  );\n}\n\nexport default MoviesSearch;\n","import MoviesSearch from 'components/MoviesSerch';\n\nfunction MoviesPage() {\n  return (\n    <>\n      <MoviesSearch />\n    </>\n  );\n}\n\nexport default MoviesPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"moviesItem_item__tLNZn\",\"image\":\"moviesItem_image__8ayOv\",\"title\":\"moviesItem_title__wZtIN\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport s from './moviesItem.module.css';\n\nfunction MoviesItem({ original_name, original_title, id, poster_path, from }) {\n  const image = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : 'https://sd.keepcalms.com/i/keep-calm-poster-not-found.png';\n  const title = original_name || original_title;\n  return (\n    <li className={s.item} key={id}>\n      <Link state={{ from }} to={`/movies/${id}`}>\n        <img src={image} alt={title} className={s.image} />\n        <p className={s.title}>{title}</p>\n      </Link>\n    </li>\n  );\n}\n\nMoviesItem.propTypes = {\n  original_name: PropTypes.string,\n  original_title: PropTypes.string,\n  id: PropTypes.number.isRequired,\n  poster_path: PropTypes.string.isRequired,\n};\n\nexport default MoviesItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"moviesList_list__NRykM\"};","import {useLocation} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n\nimport MoviesItem from '../MoviesItem';\n\nimport s from './moviesList.module.css';\n\nfunction MoviesList({ items }) {\n  const location = useLocation();\n\n  const elements = items.map(item => <MoviesItem key={item.id} {...item} from={ location}/>);\n\n  return <ul className={s.list}>{elements}</ul>;\n}\nMoviesList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      original_name: PropTypes.string,\n      original_title: PropTypes.string,\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '48e59f58a9185405f58e5b1089c8261f',\n  },\n});\n\nexport const popularMovies = async () => {\n  const { data } = await instance.get('/trending/movie/week');\n  return data;\n};\n\nexport const getMovieInfo = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {\n    params: {\n      language: 'en - US',\n    },\n  });\n  return data;\n};\n\nexport const searchFilmByName = async (query, page = 1) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      page,\n      language: 'en - US',\n      include_adult: false,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n\n//movie/338953/credits\n"],"names":["Searchbar","onSubmit","useState","query","setQuery","className","s","e","preventDefault","type","name","value","autoComplete","autoFocus","placeholder","onChange","target","required","memo","movies","isLoading","error","state","setState","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMovies","prevState","searchFilmByName","results","message","setMovie","useCallback","Boolean","length","MoviesList","items","original_name","original_title","id","poster_path","from","image","title","to","src","alt","location","useLocation","elements","map","item","instance","axios","baseURL","params","api_key","popularMovies","data","getMovieInfo","language","page","include_adult","getMovieCredits","getMovieReviews"],"sourceRoot":""}