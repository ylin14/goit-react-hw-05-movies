{"version":3,"file":"static/js/326.d5825f1d.chunk.js","mappings":"+PACA,EAAuB,sBAAvB,EAAoD,sBAApD,EAAkF,uBAAlF,EAAgH,sB,SC2DhH,MAtDA,WACE,OAA8BA,EAAAA,EAAAA,UAAS,CACrCC,MAAO,GACPC,WAAW,EACXC,MAAO,OAHT,eAAOC,EAAP,KAAgBC,EAAhB,KAKQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,6FAClBJ,GAAW,SAAAK,GAAU,yBAAUA,GAAV,IAAsBR,WAAW,GAAjC,IADH,UAEQS,EAAAA,EAAAA,IAAgBL,GAFxB,gBAEVM,EAFU,EAEVA,QAER,IACEP,GAAW,SAAAK,GAAU,yBAChBA,GADgB,IAEnBT,MAAOW,EACPV,WAAW,GAHQ,GAWtB,CANC,MAAOC,GACPE,GAAW,SAAAK,GAAU,yBAChBA,GADgB,IAEnBP,MAAOA,EAAMU,QACbX,WAAW,GAHQ,GAKtB,CAhBiB,2CAAH,qDAkBjBO,GACD,GAAE,CAACH,IAEJ,IAAQL,EAA4BG,EAA5BH,MAAOC,EAAqBE,EAArBF,UAAWC,EAAUC,EAAVD,MAEpBW,EAAWb,EAAMc,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASX,EAAS,EAATA,GAC7C,OACE,gBAAIY,UAAWC,EAAf,WACE,eAAGD,UAAWC,EAAd,qBAAgCH,MAEhC,cAAGE,UAAWC,EAAd,SAAuBF,MAHGX,EAM/B,IACD,OACE,gCACGL,EAAMmB,OAAS,GACd,eAAIF,UAAWC,EAAf,SAAwBL,KAExB,2DAEDZ,IAAa,sCACbC,IAAS,uBAAIA,MAGnB,C,sLCxDKkB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAa,mCAAG,sGACJL,EAASM,IAAI,wBADT,uBACnBC,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,qDAKbC,EAAY,mCAAG,WAAMvB,GAAN,yFACHe,EAASM,IAAT,iBAAuBrB,GAAM,CAClDkB,OAAQ,CACNM,SAAU,aAHY,uBAClBF,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZG,EAAgB,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACPZ,EAASM,IAAT,gBAA8B,CACnDH,OAAQ,CACNS,KAAAA,EACAH,SAAU,UACVI,eAAe,EACfF,MAAAA,KAN0B,uBACtBJ,EADsB,EACtBA,KADsB,kBASvBA,GATuB,2CAAH,sDAYhBO,EAAe,mCAAG,WAAM7B,GAAN,yFACNe,EAASM,IAAT,iBAAuBrB,EAAvB,aADM,uBACrBsB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfjB,EAAe,mCAAG,WAAML,GAAN,yFACNe,EAASM,IAAT,iBAAuBrB,EAAvB,aADM,uBACrBsB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Reviews/reviews.module.css?5c8c","components/Reviews/Reviews.jsx","shared/service/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"reviews_list__BCK8P\",\"item\":\"reviews_item__boRvd\",\"title\":\"reviews_title__nRRiP\",\"text\":\"reviews_text__e7pNt\"};","import { useState, useEffect } from 'react';\n\nimport { getMovieReviews } from 'shared/service/moviesApi';\nimport { useParams } from 'react-router-dom';\nimport s from './reviews.module.css';\n\nfunction Reviews() {\n  const [reviews, setReviews] = useState({\n    items: [],\n    isLoading: false,\n    error: null,\n  });\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setReviews(prevMovies => ({ ...prevMovies, isLoading: true }));\n      const { results } = await getMovieReviews(id);\n\n      try {\n        setReviews(prevMovies => ({\n          ...prevMovies,\n          items: results,\n          isLoading: false,\n        }));\n      } catch (error) {\n        setReviews(prevMovies => ({\n          ...prevMovies,\n          error: error.message,\n          isLoading: false,\n        }));\n      }\n    };\n    fetchMovies();\n  }, [id]);\n\n  const { items, isLoading, error } = reviews;\n\n  const elements = items.map(({ author, content, id }) => {\n    return (\n      <li className={s.item} key={id}>\n        <p className={s.title}>Author: {author}</p>\n\n        <p className={s.text}>{content}</p>\n      </li>\n    );\n  });\n  return (\n    <>\n      {items.length > 0 ? (\n        <ul className={s.list}>{elements}</ul>\n      ) : (\n        <p>We haven't any comments yet ...</p>\n      )}\n      {isLoading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n    </>\n  );\n}\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '48e59f58a9185405f58e5b1089c8261f',\n  },\n});\n\nexport const popularMovies = async () => {\n  const { data } = await instance.get('/trending/movie/week');\n  return data;\n};\n\nexport const getMovieInfo = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {\n    params: {\n      language: 'en - US',\n    },\n  });\n  return data;\n};\n\nexport const searchFilmByName = async (query, page = 1) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      page,\n      language: 'en - US',\n      include_adult: false,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n\n//movie/338953/credits\n"],"names":["useState","items","isLoading","error","reviews","setReviews","id","useParams","useEffect","fetchMovies","prevMovies","getMovieReviews","results","message","elements","map","author","content","className","s","length","instance","axios","baseURL","params","api_key","popularMovies","get","data","getMovieInfo","language","searchFilmByName","query","page","include_adult","getMovieCredits"],"sourceRoot":""}